# This is a basic GitHub Actions workflow to build a Gradle-based Android project.

name: Android CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # 1. Checks-out your primary repository. 
      # This is necessary to access your workflow file and any patch files you've stored here.
      - name: Checkout primary repository
        uses: actions/checkout@v4

      # 2. Checks-out the secondary repository you want to patch.
      # This now checks out the specified repository and its submodules.
      - name: Checkout repository to patch
        uses: actions/checkout@v4
        with:
          repository: 'yuliskov/SmartTube'
          path: 'source-repo'
          submodules: 'recursive'
          ref: 'master'

      # 3. Sets up the Java Development Kit (JDK) environment
      # The build instructions require JDK 14. Using 'zulu' distribution for better version availability.
      - name: Set up JDK 14
        uses: actions/setup-java@v4
        with:
          java-version: '14'
          distribution: 'zulu'
          cache: 'gradle'

      # 4. Grant execute permission for gradlew in the patched repo
      # The Gradle wrapper script needs to be executable to run.
      - name: Make gradlew executable
        working-directory: ./source-repo # Run this command inside the patched repo's directory
        run: chmod +x ./gradlew

      # 5. Run the Gradle build in the patched repo
      # This uses the specific build command provided in the instructions.
      # 'assemble' is used instead of 'install' as it's suited for CI environments.
      - name: Build with Gradle
        working-directory: ./source-repo # Run this command inside the patched repo's directory
        run: ./gradlew clean assembleStorigDebug

      # 6. (Optional) Upload build artifact from the patched repo
      # The path has been updated to match the 'storigDebug' build variant.
      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: source-repo/app/build/outputs/apk/storig/debug/app-storig-debug.apk

